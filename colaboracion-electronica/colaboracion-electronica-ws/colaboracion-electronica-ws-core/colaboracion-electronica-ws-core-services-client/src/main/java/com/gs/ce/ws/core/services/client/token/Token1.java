
package com.gs.ce.ws.core.services.client.token;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.0
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "token1", targetNamespace = "http://tempuri.org/", wsdlLocation = "file:/C:/wsdl/token.wsdl")
public class Token1
    extends Service
{

    private final static URL TOKEN1_WSDL_LOCATION;
    private final static WebServiceException TOKEN1_EXCEPTION;
    private final static QName TOKEN1_QNAME = new QName("http://tempuri.org/", "token1");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:/C:/wsdl/token.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        TOKEN1_WSDL_LOCATION = url;
        TOKEN1_EXCEPTION = e;
    }

    public Token1() {
        super(__getWsdlLocation(), TOKEN1_QNAME);
    }

    public Token1(WebServiceFeature... features) {
        super(__getWsdlLocation(), TOKEN1_QNAME, features);
    }

    public Token1(URL wsdlLocation) {
        super(wsdlLocation, TOKEN1_QNAME);
    }

    public Token1(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, TOKEN1_QNAME, features);
    }

    public Token1(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public Token1(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns Token1Soap
     */
    @WebEndpoint(name = "token1Soap")
    public Token1Soap getToken1Soap() {
        return super.getPort(new QName("http://tempuri.org/", "token1Soap"), Token1Soap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns Token1Soap
     */
    @WebEndpoint(name = "token1Soap")
    public Token1Soap getToken1Soap(WebServiceFeature... features) {
        return super.getPort(new QName("http://tempuri.org/", "token1Soap"), Token1Soap.class, features);
    }

    private static URL __getWsdlLocation() {
        if (TOKEN1_EXCEPTION!= null) {
            throw TOKEN1_EXCEPTION;
        }
        return TOKEN1_WSDL_LOCATION;
    }

}
